package start.start_2_Variable;  // 꼭 해당 패키지(폴더)안에있는것을 선언해줘야됨

public class Var2 {
    public static void main(String[] args) {
        int a ; // 변수 선언: 변수가 메모리에 데이터를 저장할 공간을 차지.
        a = 10; // 변수 에 값넣기. (변수 초기화라 부름 : 처음 무엇을해준다. )

        int c = 3,d = 4; // 여러개 선언과 초기화 동시에
        int i; //
//        System.out.println(i); //error   변수선언시 메모리에 공간을 차지하는데 어떤값이있는지 모르므로 자바는 초기화를 강제한다.

        // 위같은것들을 지역변수라하고 개발자가 직접 초기화해줘야함.(클래스변수나 인스턴스 변수는 자바가 자동으로 초기화 해줌.)
        // 컴파일에러는 자바 문법오류 : Var2.class를 만들어야하는데 못만들어서 나는 오류

        // 참고로 int c = 3 일떄 이떄 3같은 값을 리터럴이라 부름. (고정된값) 변수는 바껴도 리터럴값은 안바뀜.

        // 정수
        byte b = 127; // -128~127 까지만 저장가능( 굉장히 작아.)  , 각 리터럴숫자는 메모리 공간크기     1byte, 2의 8승
        short s= 32767; // - 32768~ 32768까지만 저장 2byte 2의 16승
        int z = 214748647; // -214748647 ~ 214748647 (약 20억) 4byte 2의 32승
        long l = 9232324232323L; //그냥 엄청나게 큰수(보통 20억넘어가면 long사용) 8byte 2의 64승, long은 뒤에 l붙여줘. 근데 보통 1과 구분위해 L을 사용.

        // 실수: 주로 double을 권장 이유는 float은 표현범위가 작아서 소수점계산에서 오류가 많아
        float f= 10.0f; // float은 f 써줘야해 4byte, 2의 32승  표현범위가 작음, 정밀도가 작아.
        double dou = 10.0;  // doble더 크다. 8byte, 2의 64승 표현범위가 큼., 메모리 사용량 줄이려면 float사용, 정밀도가 커.


        // boolean, char는 1byte
        // String은 문자길이에따라 동적으로 달라짐.(특별한 타입)
        // 실무에서는 byte(단, 파일은 바이트단위이므로 파일전송,복사떄는 사용), short, float, char는 거의 안써. (메모리Ï공간은 작아도 개발속도나 효율에 초점을 맞추는게 효과적)
        // int(20억이하), long(20억이상), double, boolean, String.
        // 변수는 카멜케이스 사용. myAccount , 첫글자는 클래스만대문자 ex) CustomOrder. 나머지는 소문자
        // 상수는 모두 대문자., 언더바로 구분. USER_LIMIT
        // 패키지는 모두 소문자 org.spring.boot
    }

}
